services:
  # ========================================
  # DATABASE
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: directus_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DIRECTUS_DB_DATABASE:-directus}
      POSTGRES_USER: ${DIRECTUS_DB_USER:-directus}
      POSTGRES_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - directus_network

  # ========================================
  # REDIS (OPCIONAL)
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: directus_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - directus_network

  # ========================================
  # DIRECTUS API
  # ========================================
  directus:
    image: directus/directus:11.12.0
    container_name: directus_api
    restart: unless-stopped
    environment:
      # Database
      DB_CLIENT: ${DIRECTUS_DB_CLIENT:-pg}
      DB_HOST: postgres
      DB_PORT: ${DIRECTUS_DB_PORT:-5432}
      DB_DATABASE: ${DIRECTUS_DB_DATABASE:-directus}
      DB_USER: ${DIRECTUS_DB_USER:-directus}
      DB_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus}

      # Key & Secret
      KEY: ${KEY}
      SECRET: ${SECRET}

      # Admin
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}

      # CORS
      CORS_ENABLED: ${CORS_ENABLED:-true}
      CORS_ORIGIN: ${CORS_ORIGIN:-true}

      # Cache
      CACHE_ENABLED: ${CACHE_ENABLED:-true}
      CACHE_STORE: redis
      CACHE_REDIS: redis://redis:6379

      # Storage
      STORAGE_LOCATIONS: ${STORAGE_LOCATIONS:-local}
      STORAGE_LOCAL_ROOT: ${STORAGE_LOCAL_ROOT:-/directus/uploads}
      STORAGE_LOCAL_PUBLIC_URL: ${STORAGE_LOCAL_PUBLIC_URL:-/uploads}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-warn}
      LOG_STYLE: ${LOG_STYLE:-json}

      # Public URL
      PUBLIC_URL: ${PUBLIC_URL:-http://localhost:8055}

    volumes:
      - directus_uploads:/directus/uploads
    ports:
      - "8055:8055"
    depends_on:
      - postgres
      - redis
    networks:
      - directus_network

  # ========================================
  # FRONTEND (NEXT.JS)
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: directus_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_DIRECTUS_URL: ${NEXT_PUBLIC_DIRECTUS_URL:-http://directus:8055}
      NEXT_PUBLIC_API_TOKEN: ${NEXT_PUBLIC_API_TOKEN}
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL:-http://localhost:3000}
      NEXT_PUBLIC_SITE_NAME: ${NEXT_PUBLIC_SITE_NAME:-Portal de Not√≠cias}
    ports:
      - "3000:3000"
    depends_on:
      - directus
    networks:
      - directus_network

  # ========================================
  # WEBSCRAPER SERVICE
  # ========================================
  webscraper:
    build:
      context: ./webscraper-service
      dockerfile: Dockerfile
    container_name: directus_webscraper
    restart: unless-stopped
    environment:
      DIRECTUS_URL: ${WEBSCRAPER_DIRECTUS_URL:-http://directus:8055}
      DIRECTUS_TOKEN: ${WEBSCRAPER_DIRECTUS_TOKEN}
      WEBSCRAPER_INTERVAL_MINUTES: ${WEBSCRAPER_INTERVAL_MINUTES:-5}
      WEBSCRAPER_MAX_ARTICLES: ${WEBSCRAPER_MAX_ARTICLES:-10}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - directus
    networks:
      - directus_network

  # ========================================
  # NGINX (REVERSE PROXY)
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: directus_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - directus
      - frontend
    networks:
      - directus_network

volumes:
  postgres_data:
  redis_data:
  directus_uploads:

networks:
  directus_network:
    driver: bridge
