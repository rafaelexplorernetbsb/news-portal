services:
  # ========================================
  # DATABASE
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_db_${ENV:-dev}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DIRECTUS_DB_DATABASE:-directus}
      POSTGRES_USER: ${DIRECTUS_DB_USER:-directus}
      POSTGRES_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - directus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DIRECTUS_DB_USER:-directus}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # REDIS
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_redis_${ENV:-dev}
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # DIRECTUS API
  # ========================================
  directus:
    image: directus/directus:11.12.0
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_api_${ENV:-dev}
    restart: unless-stopped
    environment:
      # Database
      DB_CLIENT: ${DIRECTUS_DB_CLIENT:-pg}
      DB_HOST: postgres
      DB_PORT: ${DIRECTUS_DB_PORT:-5432}
      DB_DATABASE: ${DIRECTUS_DB_DATABASE:-directus}
      DB_USER: ${DIRECTUS_DB_USER:-directus}
      DB_PASSWORD: ${DIRECTUS_DB_PASSWORD:-directus123}

      # Key & Secret
      KEY: ${DIRECTUS_KEY:-255d861b-5ea1-5996-9aa3-922530ec40b1}
      SECRET: ${DIRECTUS_SECRET:-6116487b-cda1-52c2-b5b5-c8022c45e263}

      # Admin
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD:-admin123}

      # CORS
      CORS_ENABLED: ${CORS_ENABLED:-true}
      CORS_ORIGIN: ${CORS_ORIGIN:-true}

      # Cache
      CACHE_ENABLED: ${CACHE_ENABLED:-false}
      CACHE_STORE: ${CACHE_STORE:-redis}
      CACHE_REDIS: ${CACHE_REDIS:-redis://redis:6379}

      # Storage
      STORAGE_LOCATIONS: ${STORAGE_LOCATIONS:-local}
      STORAGE_LOCAL_ROOT: ${STORAGE_LOCAL_ROOT:-/directus/uploads}
      STORAGE_LOCAL_PUBLIC_URL: ${STORAGE_LOCAL_PUBLIC_URL:-/uploads}

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_STYLE: ${LOG_STYLE:-pretty}

      # Public URL
      PUBLIC_URL: ${DIRECTUS_URL:-http://localhost:8055}

    volumes:
      - directus_uploads:/directus/uploads
      - ./extensions:/directus/extensions
      - .:/directus/project  # Montar projeto completo
    ports:
      - "${DIRECTUS_PORT:-8055}:8055"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8055/server/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ========================================
  # FRONTEND (NEXT.JS) - Apenas em produção
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_frontend_${ENV:-dev}
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_DIRECTUS_URL: ${NEXT_PUBLIC_DIRECTUS_URL:-http://localhost:8055}
      NEXT_PUBLIC_API_TOKEN: ${NEXT_PUBLIC_API_TOKEN}
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL:-http://localhost:3000}
      NEXT_PUBLIC_SITE_NAME: ${NEXT_PUBLIC_SITE_NAME:-Portal de Notícias}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - directus
    networks:
      - directus_network
    profiles:
      - production  # Só roda em produção

  # ========================================
  # WEBSCRAPER SERVICE - Apenas em produção
  # ========================================
  webscraper:
    build:
      context: ./webscraper-service
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_webscraper_${ENV:-dev}
    restart: unless-stopped
    environment:
      DIRECTUS_URL: ${WEBSCRAPER_DIRECTUS_URL:-http://directus:8055}
      DIRECTUS_TOKEN: ${WEBSCRAPER_DIRECTUS_TOKEN}
      WEBSCRAPER_INTERVAL_MINUTES: ${WEBSCRAPER_INTERVAL_MINUTES:-5}
      WEBSCRAPER_MAX_ARTICLES: ${WEBSCRAPER_MAX_ARTICLES:-10}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - directus
    networks:
      - directus_network
    profiles:
      - production  # Só roda em produção

  # ========================================
  # NGINX (REVERSE PROXY) - Apenas em produção
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME:-news-portal}_nginx_${ENV:-dev}
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - directus
      - frontend
    networks:
      - directus_network
    profiles:
      - production  # Só roda em produção

volumes:
  postgres_data:
  redis_data:
  directus_uploads:

networks:
  directus_network:
    driver: bridge
