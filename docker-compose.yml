services:
  # ========================================
  # DATABASE
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: directus_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: directus
      POSTGRES_USER: directus
      POSTGRES_PASSWORD: directus123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - directus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # REDIS (OPCIONAL)
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: directus_redis_dev
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # DIRECTUS API
  # ========================================
  directus:
    image: directus/directus:11.12.0
    container_name: directus_api_dev
    restart: unless-stopped
    environment:
      # Database
      DB_CLIENT: pg
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: directus
      DB_USER: directus
      DB_PASSWORD: directus123

      # Key & Secret
      KEY: 255d861b-5ea1-5996-9aa3-922530ec40b1
      SECRET: 6116487b-cda1-52c2-b5b5-c8022c45e263

      # Admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin123

      # CORS
      CORS_ENABLED: true
      CORS_ORIGIN: true

      # Cache (desabilitado temporariamente)
      CACHE_ENABLED: false

      # Storage
      STORAGE_LOCATIONS: local
      STORAGE_LOCAL_ROOT: /directus/uploads
      STORAGE_LOCAL_PUBLIC_URL: /uploads

      # Logging
      LOG_LEVEL: info
      LOG_STYLE: pretty

      # Public URL
      PUBLIC_URL: http://localhost:8055

    volumes:
      - directus_uploads:/directus/uploads
    ports:
      - "8055:8055"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - directus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8055/server/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  directus_uploads:

networks:
  directus_network:
    driver: bridge
